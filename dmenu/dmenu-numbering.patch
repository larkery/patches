--- a/dmenu/dmenu.c
+++ b/dmenu/dmenu.c
@@ -31,9 +31,11 @@
 struct item {
 	char *text;
 	struct item *left, *right;
-	int out;
+    int out;
+  int num;
 };
 
+static int line = -1;
 static char text[BUFSIZ] = "";
 static int bh, mw, mh;
 static int sw, sh; /* X display screen geometry width, height */
@@ -413,8 +415,13 @@
 		calcoffsets();
 		break;
 	case XK_Return:
-	case XK_KP_Enter:
-		puts((sel && !(ev->state & ShiftMask)) ? sel->text : text);
+    case XK_KP_Enter:
+      if (line < 0) {
+        puts((sel && !(ev->state & ShiftMask)) ? sel->text : text);
+      } else {
+        printf("%d\n", sel->num + line);
+      }
+
 		if (!(ev->state & ControlMask)) {
 			cleanup();
 			exit(0);
@@ -479,7 +486,8 @@
 			*p = '\0';
 		if (!(items[i].text = strdup(buf)))
 			die("cannot strdup %u bytes:", strlen(buf) + 1);
-		items[i].out = 0;
+        items[i].out = 0;
+        items[i].num = i;
 		if (strlen(items[i].text) > max)
 			max = strlen(maxstr = items[i].text);
 	}
@@ -629,7 +637,11 @@
 			fast = 1;
 		else if (!strcmp(argv[i], "-i")) { /* case-insensitive item matching */
 			fstrncmp = strncasecmp;
-			fstrstr = cistrstr;
+            fstrstr = cistrstr;
+        } else if (!strcmp(argv[i], "-0")) {
+          line = 0;
+        } else if (!strcmp(argv[i], "-1")) {
+          line = 1;
 		} else if (i + 1 == argc)
 			usage();
 		/* these options take one argument */
